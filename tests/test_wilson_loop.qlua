
package.path = '/home/joshlin/qlua_modules/?.qlua;' .. package.path
require "wilson_loop"
require "show"

function random_state(L,j)
  local x = L:Int(0)
  for i=0,#L-1 do
    x = x * L[i] + L:pcoord(i)
  end
  return L:RandomState(j,x)
end

L = qcd.lattice{5,5,5,10}
U = {}
seeds = {123,357,234,128}
for i=1,#L do
  U[i] = random_state(L,seeds[i]):gaussian_ColorMatrix():proj(1e-6,150)
end

--Show a color matrix, to check that the random worked. 
print("Initial")
show_colormat(U[1][{1,1,1,1}])

planar_wilson(L,U,4,5,10,"test_outputs/test_planar_wilson_1.txt")
nonplanar_wilson(L,U,4,5,10,"test_outputs/test_nonplanar_wilson_1.txt")

--check that the colormatrix hasn't been touched
print("Final")
show_colormat(U[1][{1,1,1,1}])

--Now, I will try a random gauge transformation 
seed = 847
gauge = random_state(L,seed):gaussian_ColorMatrix():proj(1e-6,150)
for i=1,#L do
  U[i] = gauge * U[i] * gauge:shift(i-1,"from_forward"):adjoin()
end

planar_wilson(L,U,4,5,10,"test_outputs/test_planar_wilson_2.txt")
nonplanar_wilson(L,U,4,5,10,"test_outputs/test_nonplanar_wilson_2.txt")


